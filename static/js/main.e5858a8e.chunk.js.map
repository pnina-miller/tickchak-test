{"version":3,"sources":["store/ticket/types.ts","components/code/index.tsx","App.tsx","store/ticket/reducer.ts","index.tsx","configureStore.ts","store/index.ts"],"names":["TicketActionTypes","Code","useState","code","setCode","useEffect","window","addEventListener","e","input","document","querySelector","ac","AbortController","old","signal","aborted","reason","navigator","credentials","get","otp","transport","then","value","abort","catch","err","toString","console","log","finally","className","autoComplete","required","App","store","initialState","data","errors","undefined","loading","showFormPopup","reducer","state","action","type","FETCH_REQUEST","FETCH_SUCCESS","payload","concat","FETCH_ERROR","ADD_TICKET","SHOW_FORM_POPUP","history","createBrowserHistory","createStore","combineReducers","tickets","TicketReducer","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"mOAkBcA,E,gECqCCC,G,MAjDa,WAAO,IAAD,EAGNC,mBAAS,QAHH,mBAGvBC,EAHuB,KAGjBC,EAHiB,KAmC9B,OANAC,qBAAU,WAxBF,kBAAmBC,QACnBF,EAAQ,iBACRE,OAAOC,iBAAiB,oBAAoB,SAAAC,GACxC,IAAMC,EAAQC,SAASC,cAAc,uCACrC,GAAKF,EAAL,CACA,IAAMG,EAAK,IAAIC,gBACfT,GAAQ,SAAAU,GAAG,OAAEA,EAAI,0BAA4BF,EAAGG,OAAOC,QAAQ,YAAYJ,EAAGG,OAAOE,UACrFC,UAAUC,YAAYC,IAAI,CACtBC,IAAK,CAAEC,UAAW,CAAC,QACnBP,OAAQH,EAAGG,SACLQ,MAAK,SAACF,GACZjB,GAAQ,SAAAU,GAAG,MAAE,OAAOO,EAAIlB,QACxBM,EAAMe,MAAQH,EAAIlB,KAClBS,EAAGa,WACJC,OAAM,SAAAC,GACLvB,GAAQ,SAAAU,GAAG,OAAEA,EAAK,aAAea,EAAIC,cACrCC,QAAQC,IAAIH,MACbI,SAAQ,kBAAM3B,GAAQ,SAAAU,GAAG,OAAEA,EAAI,wBAGtCV,EAAQ,mBAMb,IAKC,yBAAK4B,UAAU,aACX,yBAAKA,UAAU,eACX,6BACI,8BACI,4BAAK7B,GACL,2BAAO8B,aAAa,gBAAgBC,UAAQ,UC3BrDC,EARkB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClC,OACE,kBAAC,IAAD,CAAUA,MAAOA,GACf,kBAAC,EAAD,Q,wDFGQpC,K,uCAAAA,E,uCAAAA,E,mCAAAA,E,iCAAAA,E,4CAAAA,M,KGfP,IAAMqC,EAA6B,CACxCC,KAAM,GACNC,YAAQC,EACRC,SAAS,EACTC,eAAe,GAGXC,EAAiC,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACvE,OAAQA,EAAOC,MACb,KAAK9C,EAAkB+C,cACrB,OAAO,eAAKH,EAAZ,CAAmBH,SAAS,IAE9B,KAAKzC,EAAkBgD,cAErB,OADAnB,QAAQC,IAAI,iBAAkBe,EAAOI,SAC9B,eAAKL,EAAZ,CAAmBH,SAAS,EAAOH,KAAMM,EAAMN,KAAKY,OAAOL,EAAOI,WAEpE,KAAKjD,EAAkBmD,YACrB,OAAO,eAAKP,EAAZ,CAAmBH,SAAS,EAAOF,OAAQM,EAAOI,UAEpD,KAAKjD,EAAkBoD,WACrB,OAAO,eAAKR,EAAZ,CAAmBH,SAAS,EAAOH,KAAK,GAAD,mBAAMM,EAAMN,MAAZ,CAAkBO,EAAOI,YAElE,KAAKjD,EAAkBqD,gBACrB,OAAO,eAAKT,EAAZ,CAAmBF,cAAeG,EAAOI,UAE3C,QACE,OAAOL,ICvBb,ICCEU,EACAjB,EDFIiB,EAAUC,cAGVnB,GCFJkB,EDE2BA,ECD3BjB,EDAwB,GCEVmB,YCAdC,YAAgB,CACdC,QAASC,IDCTtB,EACAuB,YAAgBC,YAAiBP,GAAUQ,ODH/CC,IAASC,OACP,kBAAC,EAAD,CAAK5B,MAAOA,IACZ1B,SAASuD,eAAe,W","file":"static/js/main.e5858a8e.chunk.js","sourcesContent":["export interface Ticket {\r\n    title: string,\r\n    amount: number,\r\n    amount_avaliable: number,\r\n    price: number,\r\n    color: string,\r\n    active: 0|1,\r\n    image: string\r\n}\r\n\r\nexport interface TicketsState {\r\n    readonly loading: boolean;\r\n    readonly data: Ticket[];\r\n    readonly errors?: string;\r\n    readonly showFormPopup: boolean;\r\n  }\r\n\r\n\r\n  export enum TicketActionTypes {\r\n    FETCH_REQUEST = \"@@ticket/FETCH_REQUEST\",\r\n    FETCH_SUCCESS = \"@@ticket/FETCH_SUCCESS\",\r\n    FETCH_ERROR = \"@@ticket/FETCH_ERROR\",\r\n    ADD_TICKET = \"@@ticket/ADD_TICKET\",\r\n    SHOW_FORM_POPUP = \"@@ticket/SHOW_FORM_POPUP\",\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport './style.scss'\r\n\r\n\r\n\r\n\r\nconst Code: React.FC<any> = () => {\r\n\r\n\r\n    const [code, setCode] = useState('code')\r\n    const getOtp = () => {\r\n        if ('OTPCredential' in window) {\r\n            setCode('1. supported ')\r\n            window.addEventListener('DOMContentLoaded', e => {\r\n                const input = document.querySelector('input[autocomplete=\"one-time-code\"]') as any;\r\n                if (!input) return;\r\n                const ac = new AbortController();\r\n                setCode(old=>old+'2. before get aborted: ' + ac.signal.aborted+' reason: '+ac.signal.reason)\r\n                navigator.credentials.get({\r\n                    otp: { transport: ['sms'] },\r\n                    signal: ac.signal\r\n                } as any).then((otp: any) => {\r\n                    setCode(old=>' 3. '+otp.code)\r\n                    input.value = otp.code;\r\n                    ac.abort();\r\n                }).catch(err => {\r\n                    setCode(old=>old+ '4. error: ' + err.toString())\r\n                    console.log(err);\r\n                }).finally(() => setCode(old=>old+' 5. finaly'))\r\n            });\r\n        } else {\r\n            setCode('not supported')\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getOtp();\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"home-page\">\r\n            <div className=\"page-header\">\r\n                <div>\r\n                    <form>\r\n                        <h1>{code}</h1>\r\n                        <input autoComplete=\"one-time-code\" required />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Code;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ApplicationState } from \"./store\";\r\nimport { Store } from \"redux\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport './App.scss'\r\nimport Code from \"./components/code\";\r\n\r\ninterface MainProps {\r\n  store: Store<ApplicationState>;\r\n}\r\n\r\nconst App: React.FC<MainProps> = ({ store }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Code />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { Reducer } from \"redux\";\r\nimport { TicketActionTypes, TicketsState } from \"./types\";\r\n\r\nexport const initialState: TicketsState = {\r\n  data: [],\r\n  errors: undefined,\r\n  loading: false,\r\n  showFormPopup: false\r\n};\r\n\r\nconst reducer: Reducer<TicketsState> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TicketActionTypes.FETCH_REQUEST: {\r\n      return { ...state, loading: true };\r\n    }\r\n    case TicketActionTypes.FETCH_SUCCESS: {\r\n      console.log(\"action payload\", action.payload);\r\n      return { ...state, loading: false, data: state.data.concat(action.payload) };\r\n    }\r\n    case TicketActionTypes.FETCH_ERROR: {\r\n      return { ...state, loading: false, errors: action.payload };\r\n    }\r\n    case TicketActionTypes.ADD_TICKET: {\r\n      return { ...state, loading: false, data: [...state.data, action.payload] };\r\n    }\r\n    case TicketActionTypes.SHOW_FORM_POPUP: {\r\n      return { ...state, showFormPopup: action.payload };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport { reducer as TicketReducer };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport configureStore from \"./configureStore\";\r\nconst history = createBrowserHistory();\r\n\r\nconst initialState: any = {};\r\nconst store = configureStore(history, initialState);\r\nReactDOM.render(\r\n  <App store={store} />,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { Store, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { History } from \"history\";\r\nimport { ApplicationState, createRootReducer } from \"./store\";\r\n\r\nexport default function configureStore(\r\n  history: History,\r\n  initialState: ApplicationState\r\n): Store<ApplicationState> {\r\n  const store = createStore(\r\n    createRootReducer(),\r\n    initialState,\r\n    applyMiddleware(routerMiddleware(history), thunk)\r\n  );\r\n  return store;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { TicketReducer } from \"./ticket/reducer\";\r\nimport { TicketsState } from \"./ticket/types\";\r\n\r\n\r\nexport interface ApplicationState {\r\n  tickets: TicketsState;\r\n}\r\n\r\nexport const createRootReducer = () =>\r\n  combineReducers({\r\n    tickets: TicketReducer,\r\n  });\r\n"],"sourceRoot":""}